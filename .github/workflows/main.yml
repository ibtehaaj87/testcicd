name: Pull Request Workflow

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: detekt
        uses: alaegin/Detekt-Action@v1.22.0
        with:
          github_token: ${{ github.token }}
          detekt_config: config/detekt.yml
          reviewdog_reporter: github-pr-check
          fail_on_error: true
          reviewdog_level: error
          detekt_all_rules: true

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Unit Tests
        if: always()
        run: ./gradlew testDebugUnitTest

      - name: Comment Webpage Screenshot
        uses: saadmk11/comment-webpage-screenshot@main
        with:
          # Optional, the action will capture screenshots
          # of the html files provided in this input.
          # Comma seperated file paths are accepted
          capture_html_file_paths: "app/build/reports/tests/testDebugUnitTest/index.html"
#  build_main:
#    name: Build Main APK
#    needs: [ test, lint ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          ref: main
#
#      - name: Generate AAR and APK files
#        if: always()
#        run: ./gradlew assembleDebug
#
#      - name: Upload AAR files
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: apk_main
#          path: |
#            app/build/outputs/apk/debug/app-debug.apk
#            app/build/outputs/arr
#
#  build_pr:
#    name: Build PR APK
#    needs: [ test, lint ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Generate AAR and APK files
#        if: always()
#        run: ./gradlew assembleDebug
#
#      - name: Upload AAR files
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: apk_pr
#          path: |
#            app/build/outputs/apk/debug/app-debug.apk
#            app/build/outputs/arr
#
#  apk_difference:
#    name: APK Difference
#    needs: [ build_main, build_pr ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#      pull-requests: write
#
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Download APKs
#        uses: actions/download-artifact@v1
#        with:
#          name: apk_pr
#      - uses: actions/download-artifact@v1
#        with:
#          name: apk_main
#
#      - name: Run Apk Diff
#        run: |
#          gh release download -p '*.jar' -R jakewharton/diffuse 0.1.0
#          java -jar diffuse-0.1.0-binary.jar diff apk_pr/apk/debug/app-debug.apk apk_main/apk/debug/app-debug.apk > apk_differences.txt
#          { echo "\`\`\`"; head -n 17 apk_differences.txt; echo "\`\`\`"; echo; } >> apk_differences_summary.txt
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#
#      - name: comment PR
#        uses: machine-learning-apps/pr-comment@1.0.0
#        with:
#          path: apk_differences_summary.txt
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#
#
#  find_dependencies_difference:
#    name: Dependencies difference
#    needs: [ build_main, build_pr ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      pull-requests: write
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Get dependencies list
#        run: ./gradlew :app:dependencies --configuration debugRuntimeClasspath > current_dependencies.txt
#
#      - name: Uploading Current Dependencies Artifact
#        uses: actions/upload-artifact@v3
#        if: success()
#        with:
#          name: current_dependencies
#          path: current_dependencies.txt
#
#      - uses: actions/checkout@v2
#        with:
#          ref: main
#
#      - name: Get dependencies list
#        run: ./gradlew :app:dependencies --configuration debugRuntimeClasspath > previous_dependencies.txt
#
#      - name: Download Artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: current_dependencies
#
#      - name: Download and run dependency-diff-tldr
#        run: |
#          gh release download -p '*.jar' -R careem/dependency-diff-tldr v0.0.2
#          echo "Running Dependency Diff"
#          java -jar dependency-diff-tldr-r8.jar previous_dependencies.txt current_dependencies/current_dependencies.txt > difference.txt
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#
#      - name: comment PR
#        uses: machine-learning-apps/pr-comment@1.0.0
#        with:
#          path: difference.txt
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#
#
#  delete_artifacts:
#    name: Clean Up Artifacts
#    needs: [ find_dependencies_difference, apk_difference ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - uses: geekyeggo/delete-artifact@v2
#        with:
#          name: |
#            apk*
#            current_dependencies